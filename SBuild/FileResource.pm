# Copyright (C) 2013 Aveco s.r.o.
#
# This file is part of SMake.
#
# SMake is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# SMake is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with SMake.  If not, see <http://www.gnu.org/licenses/>.

#  Resource which represents a file
package SBuild::FileResource;

use SBuild::Resource;

@ISA = qw(SBuild::Resource);

#  Ctor
#
#  Usage: newResource($filename)
#  Note: the filename is specified without path - the path is computed
#        according to the directory engine.
sub newResource {
	my $class = $_[0];
	my $this = SBuild::Resource->newResource($_[1]);
	bless $this, $class;
}

#  Get filename - filename without path
sub getFilename {
	my $this = $_[0];
	return $this->getID;
}

#  Get pure filename (without path and extension)
sub getPurename {
	my $this = $_[0];
	my $filename = $this->getFilename;
	$filename =~ s/[.][^.]*$//;
	return $filename;
}

#  Get list of real file resources which are generated by this
#  resource.
#
#  This method is used to implement the "TaskAfter" behaviour. The tail
#  .task gets list of real resources and modifies them.
sub getTargetResources {
	my $this = $_[0];
	return [$this];
}

#  Get full filename (with path and extension)
#
#  The full name is computed based on a current directory (see the directory
#  engine).
#
#  Usage: getFullname($profile)
sub getFullname {
	die "Pure virtual method: FileResource::getFullname.";
}

#  Get absolute path of the file
#
#  Usage: getAbsolute($profile)
sub getAbsolute {
	die "Pure virtual method: FileResource::getAbsolute";
}

#  Get file directory
#
#  Usage: getDirectory($profile)
sub getDirectory {
	die "Pure virtual method: FileResource::getDirectory";
}

#  Check if the resource is a source resource
sub isSourceResource {
	die "Pure virtual method: FileResource::isSourceResouce";
}

#  Create the same resource with changed filename
#
#  Usage: createFileResource($filename)
sub createFileResource {
	die "Pure virtual method: FileResource::createFileResource";
}

return 1;
